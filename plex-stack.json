{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "A running environment for Plex Media Server",
    "Metadata": {

    },
    "Parameters": {

        "PlexInstanceType": {
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": ["t2.micro", "t2.small", "t2.medium", "t2.large", "m4.large"]
        },

        "PlexInstanceImageId": {
            "Type": "String",
            "Default": "ami-f3e5aa9c",
            "Description": "The base image that the instance will created from"
        },

        "AccountVPCId": {
            "Type": "String",
            "Description": "Choose the VPC that is linked to your chosen subnet. Either your own, or the AWS auto-generated default VPC."
        },

        "AccountSubnet": {
            "Type": "String",
            "Description": "Use one of the public subnets allocated to your account (make sure it's in the same availability zone)."
        },

        "PlexSecurityGroupId": {
            "Type": "String",
            "Description": "Use one of the default security group Id or one created by you (make sure port 32400 is open for ingress)"
        },

        "AvailabilityZone": {
            "Type": "String",
            "Description": "Where you want the instance and volume to be",
            "AllowedValues": ["eu-west-1a", "eu-west-1b", "eu-west-1c", "ap-south-1a"],
            "Default": "ap-south-1a"
        }

    },
    "Mappings": {

    },
    "Conditions": {

    },
    "Resources": {

        "PlexServerInstance": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": ["PlexServerStorageVolume"],
            "Properties": {
                "ImageId": {
                    "Ref": "PlexInstanceImageId"
                },
                "InstanceType": {
                    "Ref": "PlexInstanceType"
                },
                "KeyName": "personal-media-server",
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone"
                },
                "NetworkInterfaces": [{
                    "AssociatePublicIpAddress": true,
                    "DeviceIndex": 0,
                    "SubnetId": {
                        "Ref": "AccountSubnet"
                    },
                    "GroupSet": [{"Ref": "PlexSecurityGroupId"}]
                }],
                "Volumes": [{
                    "Device": "/dev/sdk",
                    "VolumeId": {
                        "Ref": "PlexServerStorageVolume"
                    }
                }],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n", [
                                "#!/bin/bash -v",
                                "fstype=`file -s /dev/xvdk`",
                                "if [ \"$fstype\" == \"/dev/xvdk: data\" ]",
                                "then",
                                "    mkfs -t ext4 /dev/sdk",
                                "fi",
                                "mkdir -p /data",
                                "chmod 750 /data",
                                "mount /dev/sdk /data",
                                "chmod -R 750 /data",
                                "chown -R ubuntu:ubuntu /data/",
                                "echo \"/dev/sdk /data ext4 defaults,nofail 0 2\" >> /etc/fstab",
                                "apt-get update -qq",
                                "apt-get install apt-transport-https ca-certificates curl software-properties-common",
                                "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -",
                                "add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"",
                                "apt-get update -qq",
                                "apt-get install docker-ce -y",
                                "mkdir -p /etc/systemd/system/docker.service.d",
                                "printf \"[Service]\nExecStart=\nExecStart=/usr/bin/dockerd -H fd:// -H tcp://0.0.0.0:2375\n\" >>  /etc/systemd/system/docker.service.d/docker.conf",
                                "systemctl daemon-reload",
                                "systemctl restart docker"
                            ]
                        ]
                    }
                }
            }
        },

        "PlexServerStorageVolume": {
            "Type": "AWS::EC2::Volume",
            "Properties": {
                "Size": "10",
                "VolumeType": "gp2",
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone"
                }
            }
        }
    },
    "Outputs": {
        "PlexMediaServerPublicIpAddress": {
            "Value": {
                "Fn::GetAtt": [ "PlexServerInstance", "PublicIp" ]
            }
        }
    }
}